<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>寸衫的个人笔记</title><link>https://cnsn521.github.io</link><description>童话是一种生活态度，仅此而已。</description><copyright>寸衫的个人笔记</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://img2.imgtp.com/2024/03/14/Zv6AQqce.ico</url><title>avatar</title><link>https://cnsn521.github.io</link></image><lastBuildDate>Thu, 14 Mar 2024 08:13:23 +0000</lastBuildDate><managingEditor>寸衫的个人笔记</managingEditor><ttl>60</ttl><webMaster>寸衫的个人笔记</webMaster><item><title>【脚本收集】常用脚本大全 - 档案</title><link>https://cnsn521.github.io/post/%E3%80%90-jiao-ben-shou-ji-%E3%80%91-chang-yong-jiao-ben-da-quan-%20-%20-dang-an.html</link><description>moeclub大佬的脚本&#13;
------------&#13;
&#13;
```&#13;
bash &lt;(wget --no-check-certificate -qO- 'https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh') -d 12 -v 64 -p 密码 -port 端口 -a -firmware&#13;
```&#13;
&#13;
[leitbogioro大佬的脚本](https://www.nodeseek.com/post-9383-1)（推荐）&#13;
------------------------------------------------------------&#13;
&#13;
```&#13;
wget --no-check-certificate -qO InstallNET.sh 'https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh' &amp;&amp; chmod a+x InstallNET.sh &amp;&amp; bash InstallNET.sh -debian 12 -pwd '密码'&#13;
```&#13;
&#13;
[beta.gs大佬的脚本](https://git.beta.gs/)&#13;
------------------------------------&#13;
&#13;
```&#13;
wget --no-check-certificate -O NewReinstall.sh https://raw.githubusercontent.com/fcurrk/reinstall/master/NewReinstall.sh &amp;&amp; chmod a+x NewReinstall.sh &amp;&amp; bash NewReinstall.sh&#13;
```&#13;
&#13;
[5k哥的脚本](https://soclearn.org/1keydd/) 风险警告：此人在loc等论坛口碑不良，多次骂人。</description><guid isPermaLink="true">https://cnsn521.github.io/post/%E3%80%90-jiao-ben-shou-ji-%E3%80%91-chang-yong-jiao-ben-da-quan-%20-%20-dang-an.html</guid><pubDate>Thu, 14 Mar 2024 08:05:34 +0000</pubDate></item><item><title>由img镜像挂载封装，并加载到kvm中</title><link>https://cnsn521.github.io/post/you-img-jing-xiang-gua-zai-feng-zhuang-%EF%BC%8C-bing-jia-zai-dao-kvm-zhong.html</link><description>### **一、挂载封装**&#13;
&#13;
1.安装依赖项：&#13;
&#13;
 确保你的系统上安装了QEMU和相应的工具。</description><guid isPermaLink="true">https://cnsn521.github.io/post/you-img-jing-xiang-gua-zai-feng-zhuang-%EF%BC%8C-bing-jia-zai-dao-kvm-zhong.html</guid><pubDate>Thu, 14 Mar 2024 07:40:44 +0000</pubDate></item><item><title>在Debian11上安装配置KVM虚拟机</title><link>https://cnsn521.github.io/post/zai-Debian11-shang-an-zhuang-pei-zhi-KVM-xu-ni-ji.html</link><description>### **一、前提**&#13;
&#13;
检查是否满足虚拟化要求, 可以根据如下步骤验证:&#13;
&#13;
检查是否开启虚拟化,如果值大于0则支持虚拟化，否则需要在BIOS中开启虚拟化, 重启重新执行如下命令&#13;
`egrep -c '(vmx|svm)' /proc/cpuinfo`&#13;
检查CPU类型: 如果是Intel的CPU, 输出VMX;如果是AMD的CPU, 输出SVM&#13;
&#13;
`grep -E --color '(vmx|svm)' /proc/cpuinfo`&#13;
### **二、安装相关包**&#13;
&#13;
```&#13;
apt update&#13;
apt install -y qemu-kvm libvirt-clients libvirt-daemon-system bridge-utils virtinst libvirt-daemon&#13;
```&#13;
&#13;
安装GUI管理工具(可选)&#13;
&#13;
没用桌面的不用装GUI&#13;
&#13;
`apt install virt-manager -y`&#13;
### **三、配置网络**&#13;
&#13;
要列出要在 KVM 虚拟机中使用的可用网络，请运行以下命令：&#13;
&#13;
`virsh net-list --all`&#13;
默认情况下是不活跃的，需要启动&#13;
&#13;
```&#13;
virsh net-start default&#13;
virsh net-autostart default&#13;
```&#13;
执行上述命令后结果如下&#13;
&#13;
```&#13;
root@debian 13:14 ➜  ~ virsh net-list --all&#13;
 Name      State    Autostart   Persistent&#13;
--------------------------------------------&#13;
 default   active   yes         yes&#13;
```&#13;
加载内核模块vhost_net，提高网络性能&#13;
`modprobe vhost_net`&#13;
# 检查是否加载成功&#13;
`lsmod | grep vhost`&#13;
配置桥接网络&#13;
KVM自带有一个开箱即用的virbr0桥接网络接口, 但是默认分配ip不太满足需求，需要新建一个&#13;
编辑/etc/network/interfaces&#13;
根据实际情况新增如下, 我需要dhcp分配ip(可以是静态ip)&#13;
```&#13;
auto br0&#13;
iface br0 inet dhcp&#13;
  bridge_ports wlp1s0&#13;
```&#13;
更改完成后, 重启网络&#13;
&#13;
```&#13;
systemctl restart networking.service&#13;
ip a&#13;
```&#13;
### **四、从镜像创建虚拟机**&#13;
&#13;
创建Linux虚拟机&#13;
&#13;
# 创建虚拟机磁盘&#13;
```&#13;
qemu-img create -f qcow2 /var/lib/libvirt/images/debian11.qcow2 20G&#13;
&#13;
virt-install \&#13;
--name debian11 \&#13;
--memory memory=1024,currentMemory=512 \&#13;
--disk path=/var/lib/libvirt/images/debian11.qcow2,size=20 \&#13;
--vcpus 1 \&#13;
--os-type linux \&#13;
--os-variant debian10 \&#13;
--network bridge=br0,model=virtio \&#13;
--graphics none \&#13;
--console pty,target_type=serial \&#13;
--location 'http://mirrors.tencent.com/debian/dists/bullseye/main/installer-amd64/' \&#13;
--extra-args 'console=ttyS0,115200n8 serial' \&#13;
--debug&#13;
```&#13;
&#13;
创建windows虚拟机&#13;
```&#13;
virt-install \&#13;
--name win10 \&#13;
--ram 2048 \&#13;
--disk path=/var/lib/libvirt/images/win10.qcow2,size=20 \&#13;
--vcpus 2 \&#13;
--os-type windows \&#13;
--os-variant win10 \&#13;
--network bridge=br0,model=virtio \&#13;
--graphics none \&#13;
--console pty,target_type=serial \&#13;
--cdrom /home/ysicing/Downloads/Win10_21H1_Chinese(Simplified)_x64.iso \&#13;
--extra-args 'console=ttyS0,115200n8 serial'&#13;
```&#13;
&#13;
开启vnc&#13;
&#13;
```&#13;
virsh vncdisplay win10&#13;
导入虚拟机&#13;
virt-install \&#13;
--name debian11 \&#13;
--ram 2048 \&#13;
--disk path=/var/lib/libvirt/images/debian11.qcow2,size=20 \&#13;
--vcpus 2 \&#13;
--os-type linux \&#13;
--os-variant debian11 \&#13;
--network bridge=br0,model=virtio \&#13;
--graphics none \&#13;
--console pty,target_type=serial \&#13;
--import&#13;
```&#13;
&#13;
导出虚拟机为qcow2&#13;
&#13;
`virt-clone --original debian11 --name debian11-clone --file /var/lib/libvirt/images/debian11-clone.qcow2`&#13;
### **五、常见高级操作**&#13;
查看虚拟机&#13;
`virsh list --all`&#13;
执行上述命令后结果如下&#13;
&#13;
```&#13;
root@debian 13:14 ➜  ~ virsh list --all&#13;
 Id   Name      State&#13;
------------------------&#13;
 2    debian11  running&#13;
```&#13;
销毁虚拟机&#13;
```&#13;
virsh destroy debian11&#13;
virsh undefine debian11&#13;
```&#13;
关闭虚拟机&#13;
`virsh shutdown debian11`。</description><guid isPermaLink="true">https://cnsn521.github.io/post/zai-Debian11-shang-an-zhuang-pei-zhi-KVM-xu-ni-ji.html</guid><pubDate>Wed, 06 Mar 2024 06:32:28 +0000</pubDate></item></channel></rss>